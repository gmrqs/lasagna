
connector.name=iceberg
hive.metastore.uri=thrift://hive-metastore:9083
fs.native-s3.enabled=true

s3.endpoint=http://minio:9000
s3.path-style-access=true
s3.aws-access-key=admin
s3.aws-secret-key=password
s3.region=sa-east-1
# hive.s3.ssl.enabled=false

# iceberg.file-format
# Define the data storage file format for Iceberg tables. Possible values are:
# PARQUET, ORC, AVRO

# iceberg.file-format=PARQUET

# iceberg.compression-codec
# The compression codec used when writing files. Possible values are:
# NONE, SNAPPY, LZ4, ZSTD, GZIP

# iceberg.compression-codec=ZSTD

# iceberg.use-file-size-from-metadata
# Read file sizes from metadata instead of file system. 
# This property must only be used as a workaround for this issue.
# https://trino.io/docs/current/connector/iceberg.html#:~:text=Read%20file%20sizes%20from%20metadata%20instead%20of%20file%20system.%20This%20property%20must%20only%20be%20used%20as%20a%20workaround%20for%20this%20issue.%20The%20problem%20was%20fixed%20in%20Iceberg%20version%200.11.0.
# The problem was fixed in Iceberg version 0.11.0.
# true, false

# iceberg.use-file-size-from-metadata=true

# iceberg.max-partitions-per-writer
# Maximum number of partitions handled per writer.

# iceberg.max-partitions-per-writer=100

# iceberg.target-max-file-size
# Target maximum size of written files; the actual size may be larger.

# iceberg.target-max-file-size=200MB

# iceberg.unique-table-location
# Use randomized, unique table locations.
# Default: true, false

# iceberg.unique-table-location=true

# iceberg.dynamic-filtering.wait-timeout
# Maximum duration to wait for completion of dynamic filters during split generation.
# Default: 0s

# iceberg.dynamic-filtering.wait-timeout=true

# iceberg.delete-schema-locations-fallback
# Whether schema locations are deleted when Trino canâ€™t determine whether they contain external files.
# Default: false

# iceberg.delete-schema-locations-fallback=false

# iceberg.minimum-assigned-split-weight
# A decimal value in the range (0, 1] used as a minimum for weights assigned to each split.
# A low value may improve performance on tables with small files.
# A higher value may improve performance for queries with highly skewed aggregations or joins.
# Default: 0.05

# iceberg.minimum-assigned-split-weight=0.05

# iceberg.table-statistics-enabled
# Enables Table statistics. 
# The equivalent catalog session property is statistics_enabled for session specific use.
# Set to false to disable statistics.
# Disabling statistics means that Cost-based optimizations cannot make better decisions about the query plan.
# Default: true

# iceberg.table-statistics-enabled=true

# iceberg.projection-pushdown-enabled
# Enable projection pushdown
# Default: true

# iceberg.projection-pushdown-enabled=true

# iceberg.hive-catalog-name
#Catalog to redirect to when a Hive table is referenced.

# iceberg.hive-catalog-name=hive

# iceberg.materialized-views.storage-schema
# Schema for creating materialized views storage tables. 
# When this property is not configured, storage tables are created in the same schema 
# as the materialized view definition. When the storage_schema materialized view 
# property is specified, it takes precedence over this catalog property.
# Default: Empty

# iceberg.materialized-views.storage-schema=

# iceberg.register-table-procedure.enabled
# Enable to allow user to call register_table procedure.
# Default: false

# iceberg.target-max-file-size=false

